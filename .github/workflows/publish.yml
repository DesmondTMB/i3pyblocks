# https://github.com/grst/python-ci-versioneer
# https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
name: Publish

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Autobump version
      run: |
        # from refs/tags/v1.2.3 get 1.2.3
        VERSION="${GITHUB_REF##*/}"
        VERSION_FILE='i3pyblocks/__version__.py'
        echo "__version__ = \"${VERSION}\"" > "${VERSION_FILE}"
      shell: bash

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel

    - name: Build a binary wheel and a source tarball
      run: |
        python setup.py sdist bdist_wheel

    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}

    - name: Commit new development version
      run: |
        # from refs/tags/v1.2.3 get 1.2.3
        VERSION="${GITHUB_REF##*/}-dev"
        VERSION_FILE='i3pyblocks/__version__.py'
        echo "__version__ = \"${VERSION}\"" > "${VERSION_FILE}"
        git config --global user.name 'Thiago Kenji Okada'
        git config --global user.email 'thiagokokada@users.noreply.github.com'
        git add "${VERSION_FILE}"
        git commit -m "Bump version"
        git push
      shell: bash
